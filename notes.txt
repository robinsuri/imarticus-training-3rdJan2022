HTML - Hypertext Markup language

HTML around 130 elements. 
HTML 5

An HTML tag is identified by a < and a >. 
opening tag - <>
closing tag - </>

good coding practice:
To always use lowercase letters for the tag names



--------
HTML containers

A container is any part of a web document that has an opening and closing tag.


Block elements
Any html element can be categorized as 
(i) block - fills the width of the elements parent containers and can contain
other block elements, inline elements, and text

(ii) inline - It fills the minimum space possible in the elements parent container and can only
contain text or other inline elements


--------------------
HTTP
GET and POST 

are used to submit the data to the server.
http://www.xyz.com/server

skype messenge - login page.
username
password 


And if they match then you are logged in.

user1
passwd1

GET request
https://www.skype.com/validateuser?user=user1&passwd=passwd1
The data is passed in the URL

https://www.skype.com/validateuser

HTTP request <--- various parts  
(i) URL
(ii) Body 
(iii)...
--------------------------------------------


mark
richard


fname=mark&lname=richard

http://example.com/submit

Takes the first name and last name of a person and when the user clicks on submit button
the data is transferred to the server http://example.com/submit

http://example.com/submit?fname=mark&lname=richard

--------------------------------
Introduction to CSS
Cascading stylesheets is a textual language for describing how a web page is styled for visual presentation.

CSS rules consists of a selector followed by a declaration block between braces {};
CSS selector : specifies the HTML element to which a specific style rule applies


Color Property
color CSS property changes the text color to a specified color value.
* white, blue,
* rgb(0,0,0) is black, rgb(0,0,255) is blue
* hexadecimal color #000000 is black, #0000FF is blue

Background properties
* background-color
* background-image
* background

----------
<link> tag  : It links an external resource
(i) external stylesheets
(ii) favicon


-----------------------------------------------------
JAVASCRIPT

1995  to be used in Netscape navigator browser.
dynamically respond to user events.

variables
A variable is a named container that stores a value in memory.

let score = 100;
Keywords:
(i) let
(ii) const

(i)Data types in JAVASCRIPT
(ii) Arithmetic operators
(iii) conditionals
(iv) comparison operators
(v) logical operators
(vi) loops

----
let age = 6;
if(age%2==0)
    console.log("age is even");
else 
    console.log("age is odd");
if(age > 10)
 console.log("age is greater than 10");
else 
  console.log("age is not greater than 10");
-----

let length = 1;
lowerCase = "abc";
upperCase = "ABC";
if(lowerCase > upperCase)
    length++;
Unicode values
"a" is compared to "A"
97  is compared 65
97 > 65
"a" > "A"

-----------------
Nested if else

let userAge=18;
if(userAge<=12)
    console.log("young");
else {
    console.log("age is at least 12");
    if(userAge >=18)
       console.log("you are more than 18");
    else 
        console.log("you are between 12 and 18");
    }

    ------------------------

    homeTeam=2;
visitingTeam=5;
if(homeTeam > 10 || visitingTeam >0)
  decision=1;
else 
decision=0;
console.log(decision);

--------------------------------
Truthy and falsy
A truthy value is a non-boolean value that evaluates to true
Ex. if(18)

conditional operator in javascript (ternary operator)
let name = condition ? expression1 : expression2

let name;
if(condition)
    name=expression1
else
   name=expression2
-------------
score=75;
console.log(score >=60 ? "passing" : "failing");
registeredEarly = false;
age = 20;
fee = registeredEarly || age <=18? 10:15;
console.log("fee is "+fee);

----------------
Switch statements
These are an alternative to writing multiple if-else statements.
A switch statement compares an expressions value to several cases
using the strict equality (===)

switch(expression){

    case value1:
    // statements
    break;
    case value2:
    break;
    .
    .
    .
    .
    default:

}


-----
change=5;
switch(change){
    case 1:
       coin="penny";
       break;
    case 5:
       coin="nickel";
       break;
    case 25:
       coin="quarter";
       break;
    default:
       coin="unknown";
}
console.log(coin);
-----


* While loop

let c = 10;
while(c<=20){
    console.log(c);
    c+=5;
}
console.log("final value of c = "+c);

-------
* do-while loop

i=1;
do {
console.log(i);
i++;
} while(i<=4);
console.log("Done");

---------

A function is a named group of statements.
function functionName(parameter1, parameter2,...,parameterN){
    // statements to be executed
}

function displaySum(x,y,z){
let sum = x+y+z;
console.log(sum);
}

// function with a parameter having default value
function sayHello(name, greeting="Hello"){
console.log(greeting + ", "+name + "!");
}

-------
for (let r=0; r<5;r++){
    let line="";
    for(let c=0;c<10;c++){
        line+="?";
    }
    console.log(line);
}
// This 5 x 10 box of ?
// Convert this code into a function called drawBox that takes 3 parameters
// 1. rows 2. cols 3. boxChar
// drawBox(5,4,!)


Solution:

function drawBox(row,col,symbol){
  for (let r=0; r<row;r++){
    let line="";
    for(let c=0;c<col;c++){
        line+=symbol;
    }
    console.log(line);
}
}

------------------

function expressions :
let displaySum2 = function(x,y,z){
  console.log(x + y + z);
}

------------
let book = {
title: "bookname",
published: 2021,
keywords: ["important", "time"]
};

book.title
book["title"]
book.keywords[0]
-----
Javascript is used with HTML
Is to make the HTML pages more interactive.

The Document Object Model (or DOM) is a data structure
that represents all parts of an HTML document.
Javascript object called document that represents
the entire DOM.

